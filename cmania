#!/usr/local/bin/python3

import curses
from curses import wrapper
import time
import pyaudio
import wave
import time
import sys
import threading
from random import randint

HEIGHT = 50
WIDTH = 80
keys = []
startingBumpersIndex = 20

def playWAVFile(filename):
    wf = wave.open(filename, 'rb')

    p = pyaudio.PyAudio()

    def callback(in_data, frame_count, time_info, status):
        data = wf.readframes(frame_count)
        return (data, pyaudio.paContinue)

    stream = p.open(format=p.get_format_from_width(wf.getsampwidth()),
                    channels=wf.getnchannels(),
                    rate=wf.getframerate(),
                    output=True,
                    stream_callback=callback)

    stream.start_stream()

    while stream.is_active():
        time.sleep(0.1)

    stream.stop_stream()
    stream.close()
    wf.close()

    p.terminate()

def renderPlayer(stdscr,pos):
    stdscr.addstr(pos[0], pos[1], "0", curses.A_REVERSE)

def renderBorder(stdscr):
    borderChar = " "
    for i in range(0,WIDTH-1):
        stdscr.addstr(0, i, borderChar, curses.A_REVERSE)
        stdscr.addstr(HEIGHT-1, i, borderChar, curses.A_REVERSE)
    for i in range(1,HEIGHT-1):
        stdscr.addstr(i, 0, borderChar, curses.A_REVERSE)
        stdscr.addstr(i, WIDTH-2, borderChar, curses.A_REVERSE)

def renderArt(stdscr):
    stdscr.addstr(HEIGHT-3, startingBumpersIndex, "------")
    stdscr.addstr(HEIGHT-3, startingBumpersIndex+10, "------")
    stdscr.addstr(HEIGHT-3, startingBumpersIndex+20, "------")
    stdscr.addstr(HEIGHT-3, startingBumpersIndex+30, "------")
    
def gameLoop():
    threading.Timer(1/30.0, gameLoop).start()

def addNote(index):
    keys.append([index, 1])

def main(stdscr):
    curses.start_color()

    playerPos = (2,2)
    curses.resizeterm(HEIGHT, WIDTH)

    curses.curs_set(0)
    stdscr.clear()
    stdscr.nodelay(1)

    curses.init_pair(1, curses.COLOR_WHITE, curses.COLOR_RED)
    curses.init_pair(2, curses.COLOR_WHITE, curses.COLOR_GREEN)

    # def gameLoop():
    #     threading.Timer(1/30.0, gameLoop).start()
    #     keyNum = stdscr.getch()
    #     stdscr.clear()
    #     if keyNum == ord('w'):
    #         playerPos = (playerPos[0]-1, playerPos[1])
    #     elif keyNum == ord('s'):
    #         playerPos = (playerPos[0]+1, playerPos[1])
    #     elif keyNum == ord('a'):
    #         playerPos = (playerPos[0], playerPos[1]-1)
    #     elif keyNum == ord('d'):
    #         playerPos = (playerPos[0], playerPos[1]+1)
    #     elif keyNum == ord('q'):
    #         sys.exit()
    #     # stdscr.addstr(2, 2, "A", curses.A_REVERSE)
    #     renderPlayer(stdscr, playerPos)
    #     renderBorder(stdscr)

    # gameLoop()
    keys.append([2,1])
    delay = 10
    while 1:
        time.sleep(1/30.0)

        delay -= 1
        if delay==0:
            addNote(randint(0,3))
            delay = 10

        keyNum = stdscr.getch()
        stdscr.clear()
        # if keyNum == ord('w'):
        #     playerPos = (playerPos[0]-1, playerPos[1])
        # elif keyNum == ord('s'):
        #     playerPos = (playerPos[0]+1, playerPos[1])
        # elif keyNum == ord('a'):
        #     playerPos = (playerPos[0], playerPos[1]-1)
        # elif keyNum == ord('d'):
        #     playerPos = (playerPos[0], playerPos[1]+1)
        if keyNum == ord('q'):
            break

        renderArt(stdscr)

        for key in keys:
            stdscr.addstr(int(key[1]), key[0]*10 + startingBumpersIndex, " ++++ ")
            key[1] += 1
            if key[1] > HEIGHT-3:
                keys.remove(key)
                stdscr.addstr(HEIGHT-3, key[0]*10 + startingBumpersIndex, "------", curses.color_pair(1))

            elif key[1] < HEIGHT-3 and key[1] > HEIGHT-13:
                if keyNum == ord(str(key[0]+1)):
                    keys.remove(key)
                    stdscr.addstr(HEIGHT-3, key[0]*10 + startingBumpersIndex, "------", curses.color_pair(2))



        renderPlayer(stdscr, playerPos)
        renderBorder(stdscr)

        stdscr.refresh()

    
wrapper(main)
